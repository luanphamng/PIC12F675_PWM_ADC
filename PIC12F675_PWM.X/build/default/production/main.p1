Version 3.2 HI-TECH Software Intermediate Code
"710 D:\02_Programs\01_ToolsForDev\Microchip\xc8\v1.38\include\pic12f675.h
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"1597
[v _T0IE `Vb ~T0 @X0 0 e@93 ]
"1511
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"1374
[v _ANSEL `Vuc ~T0 @X0 0 e@159 ]
"779
[v _TRISIO `Vuc ~T0 @X0 0 e@133 ]
"627
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"550
[v _CMCON `Vuc ~T0 @X0 0 e@25 ]
"1184
[v _VRCON `Vuc ~T0 @X0 0 e@153 ]
"67 delay.h
[v _DELAY_us `(v ~T0 @X0 0 ef1`ui ]
"1517 D:\02_Programs\01_ToolsForDev\Microchip\xc8\v1.38\include\pic12f675.h
[v _GO_nDONE `Vb ~T0 @X0 0 e@249 ]
"608
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"1355
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"1599
[v _T0IF `Vb ~T0 @X0 0 e@90 ]
"1519
[v _GP0 `Vb ~T0 @X0 0 e@40 ]
"68
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
[p mainexit ]
"212
[v _GPIO `Vuc ~T0 @X0 0 e@5 ]
"1523
[v _GP2 `Vb ~T0 @X0 0 e@42 ]
"68 delay.h
[v _DELAY_ms `(v ~T0 @X0 0 ef1`ui ]
[; ;pic12f675.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 D:\02_Programs\01_ToolsForDev\Microchip\xc8\v1.38\include\pic12f675.h
[; ;pic12f675.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic12f675.h: 54: typedef union {
[; ;pic12f675.h: 55: struct {
[; ;pic12f675.h: 56: unsigned INDF :8;
[; ;pic12f675.h: 57: };
[; ;pic12f675.h: 58: } INDFbits_t;
[; ;pic12f675.h: 59: extern volatile INDFbits_t INDFbits @ 0x000;
[; ;pic12f675.h: 68: extern volatile unsigned char TMR0 @ 0x001;
"70
[; ;pic12f675.h: 70: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic12f675.h: 73: typedef union {
[; ;pic12f675.h: 74: struct {
[; ;pic12f675.h: 75: unsigned TMR0 :8;
[; ;pic12f675.h: 76: };
[; ;pic12f675.h: 77: } TMR0bits_t;
[; ;pic12f675.h: 78: extern volatile TMR0bits_t TMR0bits @ 0x001;
[; ;pic12f675.h: 87: extern volatile unsigned char PCL @ 0x002;
"89
[; ;pic12f675.h: 89: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic12f675.h: 92: typedef union {
[; ;pic12f675.h: 93: struct {
[; ;pic12f675.h: 94: unsigned PCL :8;
[; ;pic12f675.h: 95: };
[; ;pic12f675.h: 96: } PCLbits_t;
[; ;pic12f675.h: 97: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic12f675.h: 106: extern volatile unsigned char STATUS @ 0x003;
"108
[; ;pic12f675.h: 108: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic12f675.h: 111: typedef union {
[; ;pic12f675.h: 112: struct {
[; ;pic12f675.h: 113: unsigned C :1;
[; ;pic12f675.h: 114: unsigned DC :1;
[; ;pic12f675.h: 115: unsigned Z :1;
[; ;pic12f675.h: 116: unsigned nPD :1;
[; ;pic12f675.h: 117: unsigned nTO :1;
[; ;pic12f675.h: 118: unsigned RP :2;
[; ;pic12f675.h: 119: unsigned IRP :1;
[; ;pic12f675.h: 120: };
[; ;pic12f675.h: 121: struct {
[; ;pic12f675.h: 122: unsigned :5;
[; ;pic12f675.h: 123: unsigned RP0 :1;
[; ;pic12f675.h: 124: unsigned RP1 :1;
[; ;pic12f675.h: 125: };
[; ;pic12f675.h: 126: struct {
[; ;pic12f675.h: 127: unsigned CARRY :1;
[; ;pic12f675.h: 128: };
[; ;pic12f675.h: 129: struct {
[; ;pic12f675.h: 130: unsigned :2;
[; ;pic12f675.h: 131: unsigned ZERO :1;
[; ;pic12f675.h: 132: };
[; ;pic12f675.h: 133: } STATUSbits_t;
[; ;pic12f675.h: 134: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic12f675.h: 193: extern volatile unsigned char FSR @ 0x004;
"195
[; ;pic12f675.h: 195: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic12f675.h: 198: typedef union {
[; ;pic12f675.h: 199: struct {
[; ;pic12f675.h: 200: unsigned FSR :8;
[; ;pic12f675.h: 201: };
[; ;pic12f675.h: 202: } FSRbits_t;
[; ;pic12f675.h: 203: extern volatile FSRbits_t FSRbits @ 0x004;
[; ;pic12f675.h: 212: extern volatile unsigned char GPIO @ 0x005;
"214
[; ;pic12f675.h: 214: asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
[; ;pic12f675.h: 217: typedef union {
[; ;pic12f675.h: 218: struct {
[; ;pic12f675.h: 219: unsigned GP0 :1;
[; ;pic12f675.h: 220: unsigned GP1 :1;
[; ;pic12f675.h: 221: unsigned GP2 :1;
[; ;pic12f675.h: 222: unsigned GP3 :1;
[; ;pic12f675.h: 223: unsigned GP4 :1;
[; ;pic12f675.h: 224: unsigned GP5 :1;
[; ;pic12f675.h: 225: };
[; ;pic12f675.h: 226: struct {
[; ;pic12f675.h: 227: unsigned GPIO0 :1;
[; ;pic12f675.h: 228: unsigned GPIO1 :1;
[; ;pic12f675.h: 229: unsigned GPIO2 :1;
[; ;pic12f675.h: 230: unsigned GPIO3 :1;
[; ;pic12f675.h: 231: unsigned GPIO4 :1;
[; ;pic12f675.h: 232: unsigned GPIO5 :1;
[; ;pic12f675.h: 233: };
[; ;pic12f675.h: 234: } GPIObits_t;
[; ;pic12f675.h: 235: extern volatile GPIObits_t GPIObits @ 0x005;
[; ;pic12f675.h: 299: extern volatile unsigned char PCLATH @ 0x00A;
"301
[; ;pic12f675.h: 301: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic12f675.h: 304: typedef union {
[; ;pic12f675.h: 305: struct {
[; ;pic12f675.h: 306: unsigned PCLATH :5;
[; ;pic12f675.h: 307: };
[; ;pic12f675.h: 308: } PCLATHbits_t;
[; ;pic12f675.h: 309: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic12f675.h: 318: extern volatile unsigned char INTCON @ 0x00B;
"320
[; ;pic12f675.h: 320: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic12f675.h: 323: typedef union {
[; ;pic12f675.h: 324: struct {
[; ;pic12f675.h: 325: unsigned GPIF :1;
[; ;pic12f675.h: 326: unsigned INTF :1;
[; ;pic12f675.h: 327: unsigned T0IF :1;
[; ;pic12f675.h: 328: unsigned GPIE :1;
[; ;pic12f675.h: 329: unsigned INTE :1;
[; ;pic12f675.h: 330: unsigned T0IE :1;
[; ;pic12f675.h: 331: unsigned PEIE :1;
[; ;pic12f675.h: 332: unsigned GIE :1;
[; ;pic12f675.h: 333: };
[; ;pic12f675.h: 334: struct {
[; ;pic12f675.h: 335: unsigned :2;
[; ;pic12f675.h: 336: unsigned TMR0IF :1;
[; ;pic12f675.h: 337: unsigned :2;
[; ;pic12f675.h: 338: unsigned TMR0IE :1;
[; ;pic12f675.h: 339: };
[; ;pic12f675.h: 340: } INTCONbits_t;
[; ;pic12f675.h: 341: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic12f675.h: 395: extern volatile unsigned char PIR1 @ 0x00C;
"397
[; ;pic12f675.h: 397: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic12f675.h: 400: typedef union {
[; ;pic12f675.h: 401: struct {
[; ;pic12f675.h: 402: unsigned TMR1IF :1;
[; ;pic12f675.h: 403: unsigned :2;
[; ;pic12f675.h: 404: unsigned CMIF :1;
[; ;pic12f675.h: 405: unsigned :2;
[; ;pic12f675.h: 406: unsigned ADIF :1;
[; ;pic12f675.h: 407: unsigned EEIF :1;
[; ;pic12f675.h: 408: };
[; ;pic12f675.h: 409: struct {
[; ;pic12f675.h: 410: unsigned T1IF :1;
[; ;pic12f675.h: 411: };
[; ;pic12f675.h: 412: } PIR1bits_t;
[; ;pic12f675.h: 413: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic12f675.h: 442: extern volatile unsigned short TMR1 @ 0x00E;
"444
[; ;pic12f675.h: 444: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic12f675.h: 448: extern volatile unsigned char TMR1L @ 0x00E;
"450
[; ;pic12f675.h: 450: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic12f675.h: 453: typedef union {
[; ;pic12f675.h: 454: struct {
[; ;pic12f675.h: 455: unsigned TMR1L :8;
[; ;pic12f675.h: 456: };
[; ;pic12f675.h: 457: } TMR1Lbits_t;
[; ;pic12f675.h: 458: extern volatile TMR1Lbits_t TMR1Lbits @ 0x00E;
[; ;pic12f675.h: 467: extern volatile unsigned char TMR1H @ 0x00F;
"469
[; ;pic12f675.h: 469: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic12f675.h: 472: typedef union {
[; ;pic12f675.h: 473: struct {
[; ;pic12f675.h: 474: unsigned TMR1H :8;
[; ;pic12f675.h: 475: };
[; ;pic12f675.h: 476: } TMR1Hbits_t;
[; ;pic12f675.h: 477: extern volatile TMR1Hbits_t TMR1Hbits @ 0x00F;
[; ;pic12f675.h: 486: extern volatile unsigned char T1CON @ 0x010;
"488
[; ;pic12f675.h: 488: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic12f675.h: 491: typedef union {
[; ;pic12f675.h: 492: struct {
[; ;pic12f675.h: 493: unsigned TMR1ON :1;
[; ;pic12f675.h: 494: unsigned TMR1CS :1;
[; ;pic12f675.h: 495: unsigned nT1SYNC :1;
[; ;pic12f675.h: 496: unsigned T1OSCEN :1;
[; ;pic12f675.h: 497: unsigned T1CKPS :2;
[; ;pic12f675.h: 498: unsigned TMR1GE :1;
[; ;pic12f675.h: 499: };
[; ;pic12f675.h: 500: struct {
[; ;pic12f675.h: 501: unsigned :4;
[; ;pic12f675.h: 502: unsigned T1CKPS0 :1;
[; ;pic12f675.h: 503: unsigned T1CKPS1 :1;
[; ;pic12f675.h: 504: };
[; ;pic12f675.h: 505: } T1CONbits_t;
[; ;pic12f675.h: 506: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic12f675.h: 550: extern volatile unsigned char CMCON @ 0x019;
"552
[; ;pic12f675.h: 552: asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
[; ;pic12f675.h: 555: typedef union {
[; ;pic12f675.h: 556: struct {
[; ;pic12f675.h: 557: unsigned CM :3;
[; ;pic12f675.h: 558: unsigned CIS :1;
[; ;pic12f675.h: 559: unsigned CINV :1;
[; ;pic12f675.h: 560: unsigned :1;
[; ;pic12f675.h: 561: unsigned COUT :1;
[; ;pic12f675.h: 562: };
[; ;pic12f675.h: 563: struct {
[; ;pic12f675.h: 564: unsigned CM0 :1;
[; ;pic12f675.h: 565: unsigned CM1 :1;
[; ;pic12f675.h: 566: unsigned CM2 :1;
[; ;pic12f675.h: 567: };
[; ;pic12f675.h: 568: } CMCONbits_t;
[; ;pic12f675.h: 569: extern volatile CMCONbits_t CMCONbits @ 0x019;
[; ;pic12f675.h: 608: extern volatile unsigned char ADRESH @ 0x01E;
"610
[; ;pic12f675.h: 610: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic12f675.h: 613: typedef union {
[; ;pic12f675.h: 614: struct {
[; ;pic12f675.h: 615: unsigned ADRESH :8;
[; ;pic12f675.h: 616: };
[; ;pic12f675.h: 617: } ADRESHbits_t;
[; ;pic12f675.h: 618: extern volatile ADRESHbits_t ADRESHbits @ 0x01E;
[; ;pic12f675.h: 627: extern volatile unsigned char ADCON0 @ 0x01F;
"629
[; ;pic12f675.h: 629: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic12f675.h: 632: typedef union {
[; ;pic12f675.h: 633: struct {
[; ;pic12f675.h: 634: unsigned ADON :1;
[; ;pic12f675.h: 635: unsigned GO_nDONE :1;
[; ;pic12f675.h: 636: unsigned CHS :2;
[; ;pic12f675.h: 637: unsigned :2;
[; ;pic12f675.h: 638: unsigned VCFG :1;
[; ;pic12f675.h: 639: unsigned ADFM :1;
[; ;pic12f675.h: 640: };
[; ;pic12f675.h: 641: struct {
[; ;pic12f675.h: 642: unsigned :1;
[; ;pic12f675.h: 643: unsigned GO_DONE :1;
[; ;pic12f675.h: 644: unsigned CHS0 :1;
[; ;pic12f675.h: 645: unsigned CHS1 :1;
[; ;pic12f675.h: 646: };
[; ;pic12f675.h: 647: struct {
[; ;pic12f675.h: 648: unsigned :1;
[; ;pic12f675.h: 649: unsigned nDONE :1;
[; ;pic12f675.h: 650: };
[; ;pic12f675.h: 651: struct {
[; ;pic12f675.h: 652: unsigned :1;
[; ;pic12f675.h: 653: unsigned GO :1;
[; ;pic12f675.h: 654: };
[; ;pic12f675.h: 655: } ADCON0bits_t;
[; ;pic12f675.h: 656: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic12f675.h: 710: extern volatile unsigned char OPTION_REG @ 0x081;
"712
[; ;pic12f675.h: 712: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic12f675.h: 715: typedef union {
[; ;pic12f675.h: 716: struct {
[; ;pic12f675.h: 717: unsigned PS :3;
[; ;pic12f675.h: 718: unsigned PSA :1;
[; ;pic12f675.h: 719: unsigned T0SE :1;
[; ;pic12f675.h: 720: unsigned T0CS :1;
[; ;pic12f675.h: 721: unsigned INTEDG :1;
[; ;pic12f675.h: 722: unsigned nGPPU :1;
[; ;pic12f675.h: 723: };
[; ;pic12f675.h: 724: struct {
[; ;pic12f675.h: 725: unsigned PS0 :1;
[; ;pic12f675.h: 726: unsigned PS1 :1;
[; ;pic12f675.h: 727: unsigned PS2 :1;
[; ;pic12f675.h: 728: };
[; ;pic12f675.h: 729: } OPTION_REGbits_t;
[; ;pic12f675.h: 730: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic12f675.h: 779: extern volatile unsigned char TRISIO @ 0x085;
"781
[; ;pic12f675.h: 781: asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
[; ;pic12f675.h: 784: typedef union {
[; ;pic12f675.h: 785: struct {
[; ;pic12f675.h: 786: unsigned TRISIO0 :1;
[; ;pic12f675.h: 787: unsigned TRISIO1 :1;
[; ;pic12f675.h: 788: unsigned TRISIO2 :1;
[; ;pic12f675.h: 789: unsigned TRISIO3 :1;
[; ;pic12f675.h: 790: unsigned TRISIO4 :1;
[; ;pic12f675.h: 791: unsigned TRISIO5 :1;
[; ;pic12f675.h: 792: };
[; ;pic12f675.h: 793: } TRISIObits_t;
[; ;pic12f675.h: 794: extern volatile TRISIObits_t TRISIObits @ 0x085;
[; ;pic12f675.h: 828: extern volatile unsigned char PIE1 @ 0x08C;
"830
[; ;pic12f675.h: 830: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic12f675.h: 833: typedef union {
[; ;pic12f675.h: 834: struct {
[; ;pic12f675.h: 835: unsigned TMR1IE :1;
[; ;pic12f675.h: 836: unsigned :2;
[; ;pic12f675.h: 837: unsigned CMIE :1;
[; ;pic12f675.h: 838: unsigned :2;
[; ;pic12f675.h: 839: unsigned ADIE :1;
[; ;pic12f675.h: 840: unsigned EEIE :1;
[; ;pic12f675.h: 841: };
[; ;pic12f675.h: 842: struct {
[; ;pic12f675.h: 843: unsigned T1IE :1;
[; ;pic12f675.h: 844: };
[; ;pic12f675.h: 845: } PIE1bits_t;
[; ;pic12f675.h: 846: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic12f675.h: 875: extern volatile unsigned char PCON @ 0x08E;
"877
[; ;pic12f675.h: 877: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic12f675.h: 880: typedef union {
[; ;pic12f675.h: 881: struct {
[; ;pic12f675.h: 882: unsigned nBOR :1;
[; ;pic12f675.h: 883: unsigned nPOR :1;
[; ;pic12f675.h: 884: };
[; ;pic12f675.h: 885: struct {
[; ;pic12f675.h: 886: unsigned nBOD :1;
[; ;pic12f675.h: 887: };
[; ;pic12f675.h: 888: } PCONbits_t;
[; ;pic12f675.h: 889: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic12f675.h: 908: extern volatile unsigned char OSCCAL @ 0x090;
"910
[; ;pic12f675.h: 910: asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
[; ;pic12f675.h: 913: typedef union {
[; ;pic12f675.h: 914: struct {
[; ;pic12f675.h: 915: unsigned :2;
[; ;pic12f675.h: 916: unsigned CAL :6;
[; ;pic12f675.h: 917: };
[; ;pic12f675.h: 918: struct {
[; ;pic12f675.h: 919: unsigned :2;
[; ;pic12f675.h: 920: unsigned CAL0 :1;
[; ;pic12f675.h: 921: unsigned CAL1 :1;
[; ;pic12f675.h: 922: unsigned CAL2 :1;
[; ;pic12f675.h: 923: unsigned CAL3 :1;
[; ;pic12f675.h: 924: unsigned CAL4 :1;
[; ;pic12f675.h: 925: unsigned CAL5 :1;
[; ;pic12f675.h: 926: };
[; ;pic12f675.h: 927: } OSCCALbits_t;
[; ;pic12f675.h: 928: extern volatile OSCCALbits_t OSCCALbits @ 0x090;
[; ;pic12f675.h: 967: extern volatile unsigned char WPU @ 0x095;
"969
[; ;pic12f675.h: 969: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic12f675.h: 972: typedef union {
[; ;pic12f675.h: 973: struct {
[; ;pic12f675.h: 974: unsigned WPU0 :1;
[; ;pic12f675.h: 975: unsigned WPU1 :1;
[; ;pic12f675.h: 976: unsigned WPU2 :1;
[; ;pic12f675.h: 977: unsigned :1;
[; ;pic12f675.h: 978: unsigned WPU4 :1;
[; ;pic12f675.h: 979: unsigned WPU5 :1;
[; ;pic12f675.h: 980: };
[; ;pic12f675.h: 981: } WPUbits_t;
[; ;pic12f675.h: 982: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic12f675.h: 1011: extern volatile unsigned char IOC @ 0x096;
"1013
[; ;pic12f675.h: 1013: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic12f675.h: 1016: extern volatile unsigned char IOCB @ 0x096;
"1018
[; ;pic12f675.h: 1018: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic12f675.h: 1021: typedef union {
[; ;pic12f675.h: 1022: struct {
[; ;pic12f675.h: 1023: unsigned IOC0 :1;
[; ;pic12f675.h: 1024: unsigned IOC1 :1;
[; ;pic12f675.h: 1025: unsigned IOC2 :1;
[; ;pic12f675.h: 1026: unsigned IOC3 :1;
[; ;pic12f675.h: 1027: unsigned IOC4 :1;
[; ;pic12f675.h: 1028: unsigned IOC5 :1;
[; ;pic12f675.h: 1029: };
[; ;pic12f675.h: 1030: struct {
[; ;pic12f675.h: 1031: unsigned IOCB0 :1;
[; ;pic12f675.h: 1032: unsigned IOCB1 :1;
[; ;pic12f675.h: 1033: unsigned IOCB2 :1;
[; ;pic12f675.h: 1034: unsigned IOCB3 :1;
[; ;pic12f675.h: 1035: unsigned IOCB4 :1;
[; ;pic12f675.h: 1036: unsigned IOCB5 :1;
[; ;pic12f675.h: 1037: };
[; ;pic12f675.h: 1038: } IOCbits_t;
[; ;pic12f675.h: 1039: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic12f675.h: 1102: typedef union {
[; ;pic12f675.h: 1103: struct {
[; ;pic12f675.h: 1104: unsigned IOC0 :1;
[; ;pic12f675.h: 1105: unsigned IOC1 :1;
[; ;pic12f675.h: 1106: unsigned IOC2 :1;
[; ;pic12f675.h: 1107: unsigned IOC3 :1;
[; ;pic12f675.h: 1108: unsigned IOC4 :1;
[; ;pic12f675.h: 1109: unsigned IOC5 :1;
[; ;pic12f675.h: 1110: };
[; ;pic12f675.h: 1111: struct {
[; ;pic12f675.h: 1112: unsigned IOCB0 :1;
[; ;pic12f675.h: 1113: unsigned IOCB1 :1;
[; ;pic12f675.h: 1114: unsigned IOCB2 :1;
[; ;pic12f675.h: 1115: unsigned IOCB3 :1;
[; ;pic12f675.h: 1116: unsigned IOCB4 :1;
[; ;pic12f675.h: 1117: unsigned IOCB5 :1;
[; ;pic12f675.h: 1118: };
[; ;pic12f675.h: 1119: } IOCBbits_t;
[; ;pic12f675.h: 1120: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic12f675.h: 1184: extern volatile unsigned char VRCON @ 0x099;
"1186
[; ;pic12f675.h: 1186: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic12f675.h: 1189: typedef union {
[; ;pic12f675.h: 1190: struct {
[; ;pic12f675.h: 1191: unsigned VR :4;
[; ;pic12f675.h: 1192: unsigned :1;
[; ;pic12f675.h: 1193: unsigned VRR :1;
[; ;pic12f675.h: 1194: unsigned :1;
[; ;pic12f675.h: 1195: unsigned VREN :1;
[; ;pic12f675.h: 1196: };
[; ;pic12f675.h: 1197: struct {
[; ;pic12f675.h: 1198: unsigned VR0 :1;
[; ;pic12f675.h: 1199: unsigned VR1 :1;
[; ;pic12f675.h: 1200: unsigned VR2 :1;
[; ;pic12f675.h: 1201: unsigned VR3 :1;
[; ;pic12f675.h: 1202: };
[; ;pic12f675.h: 1203: } VRCONbits_t;
[; ;pic12f675.h: 1204: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic12f675.h: 1243: extern volatile unsigned char EEDATA @ 0x09A;
"1245
[; ;pic12f675.h: 1245: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic12f675.h: 1248: extern volatile unsigned char EEDAT @ 0x09A;
"1250
[; ;pic12f675.h: 1250: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic12f675.h: 1253: typedef union {
[; ;pic12f675.h: 1254: struct {
[; ;pic12f675.h: 1255: unsigned EEDATA :8;
[; ;pic12f675.h: 1256: };
[; ;pic12f675.h: 1257: } EEDATAbits_t;
[; ;pic12f675.h: 1258: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic12f675.h: 1266: typedef union {
[; ;pic12f675.h: 1267: struct {
[; ;pic12f675.h: 1268: unsigned EEDATA :8;
[; ;pic12f675.h: 1269: };
[; ;pic12f675.h: 1270: } EEDATbits_t;
[; ;pic12f675.h: 1271: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic12f675.h: 1280: extern volatile unsigned char EEADR @ 0x09B;
"1282
[; ;pic12f675.h: 1282: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic12f675.h: 1285: typedef union {
[; ;pic12f675.h: 1286: struct {
[; ;pic12f675.h: 1287: unsigned EEADR :7;
[; ;pic12f675.h: 1288: };
[; ;pic12f675.h: 1289: } EEADRbits_t;
[; ;pic12f675.h: 1290: extern volatile EEADRbits_t EEADRbits @ 0x09B;
[; ;pic12f675.h: 1299: extern volatile unsigned char EECON1 @ 0x09C;
"1301
[; ;pic12f675.h: 1301: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic12f675.h: 1304: typedef union {
[; ;pic12f675.h: 1305: struct {
[; ;pic12f675.h: 1306: unsigned RD :1;
[; ;pic12f675.h: 1307: unsigned WR :1;
[; ;pic12f675.h: 1308: unsigned WREN :1;
[; ;pic12f675.h: 1309: unsigned WRERR :1;
[; ;pic12f675.h: 1310: };
[; ;pic12f675.h: 1311: } EECON1bits_t;
[; ;pic12f675.h: 1312: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic12f675.h: 1336: extern volatile unsigned char EECON2 @ 0x09D;
"1338
[; ;pic12f675.h: 1338: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic12f675.h: 1341: typedef union {
[; ;pic12f675.h: 1342: struct {
[; ;pic12f675.h: 1343: unsigned EECON2 :8;
[; ;pic12f675.h: 1344: };
[; ;pic12f675.h: 1345: } EECON2bits_t;
[; ;pic12f675.h: 1346: extern volatile EECON2bits_t EECON2bits @ 0x09D;
[; ;pic12f675.h: 1355: extern volatile unsigned char ADRESL @ 0x09E;
"1357
[; ;pic12f675.h: 1357: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic12f675.h: 1360: typedef union {
[; ;pic12f675.h: 1361: struct {
[; ;pic12f675.h: 1362: unsigned ADRESL :8;
[; ;pic12f675.h: 1363: };
[; ;pic12f675.h: 1364: } ADRESLbits_t;
[; ;pic12f675.h: 1365: extern volatile ADRESLbits_t ADRESLbits @ 0x09E;
[; ;pic12f675.h: 1374: extern volatile unsigned char ANSEL @ 0x09F;
"1376
[; ;pic12f675.h: 1376: asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
[; ;pic12f675.h: 1379: typedef union {
[; ;pic12f675.h: 1380: struct {
[; ;pic12f675.h: 1381: unsigned ANS :4;
[; ;pic12f675.h: 1382: unsigned ADCS :3;
[; ;pic12f675.h: 1383: };
[; ;pic12f675.h: 1384: struct {
[; ;pic12f675.h: 1385: unsigned ANS0 :1;
[; ;pic12f675.h: 1386: unsigned ANS1 :1;
[; ;pic12f675.h: 1387: unsigned ANS2 :1;
[; ;pic12f675.h: 1388: unsigned ANS3 :1;
[; ;pic12f675.h: 1389: unsigned ADCS0 :1;
[; ;pic12f675.h: 1390: unsigned ADCS1 :1;
[; ;pic12f675.h: 1391: unsigned ADCS2 :1;
[; ;pic12f675.h: 1392: };
[; ;pic12f675.h: 1393: } ANSELbits_t;
[; ;pic12f675.h: 1394: extern volatile ANSELbits_t ANSELbits @ 0x09F;
[; ;pic12f675.h: 1449: extern volatile __bit ADCS0 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic12f675.h: 1451: extern volatile __bit ADCS1 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic12f675.h: 1453: extern volatile __bit ADCS2 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic12f675.h: 1455: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic12f675.h: 1457: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic12f675.h: 1459: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic12f675.h: 1461: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic12f675.h: 1463: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic12f675.h: 1465: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic12f675.h: 1467: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic12f675.h: 1469: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic12f675.h: 1471: extern volatile __bit CAL0 @ (((unsigned) &OSCCAL)*8) + 2;
[; ;pic12f675.h: 1473: extern volatile __bit CAL1 @ (((unsigned) &OSCCAL)*8) + 3;
[; ;pic12f675.h: 1475: extern volatile __bit CAL2 @ (((unsigned) &OSCCAL)*8) + 4;
[; ;pic12f675.h: 1477: extern volatile __bit CAL3 @ (((unsigned) &OSCCAL)*8) + 5;
[; ;pic12f675.h: 1479: extern volatile __bit CAL4 @ (((unsigned) &OSCCAL)*8) + 6;
[; ;pic12f675.h: 1481: extern volatile __bit CAL5 @ (((unsigned) &OSCCAL)*8) + 7;
[; ;pic12f675.h: 1483: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic12f675.h: 1485: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic12f675.h: 1487: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic12f675.h: 1489: extern volatile __bit CINV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic12f675.h: 1491: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic12f675.h: 1493: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic12f675.h: 1495: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic12f675.h: 1497: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic12f675.h: 1499: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic12f675.h: 1501: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic12f675.h: 1503: extern volatile __bit COUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic12f675.h: 1505: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic12f675.h: 1507: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic12f675.h: 1509: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic12f675.h: 1511: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic12f675.h: 1513: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1515: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1517: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1519: extern volatile __bit GP0 @ (((unsigned) &GPIO)*8) + 0;
[; ;pic12f675.h: 1521: extern volatile __bit GP1 @ (((unsigned) &GPIO)*8) + 1;
[; ;pic12f675.h: 1523: extern volatile __bit GP2 @ (((unsigned) &GPIO)*8) + 2;
[; ;pic12f675.h: 1525: extern volatile __bit GP3 @ (((unsigned) &GPIO)*8) + 3;
[; ;pic12f675.h: 1527: extern volatile __bit GP4 @ (((unsigned) &GPIO)*8) + 4;
[; ;pic12f675.h: 1529: extern volatile __bit GP5 @ (((unsigned) &GPIO)*8) + 5;
[; ;pic12f675.h: 1531: extern volatile __bit GPIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic12f675.h: 1533: extern volatile __bit GPIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic12f675.h: 1535: extern volatile __bit GPIO0 @ (((unsigned) &GPIO)*8) + 0;
[; ;pic12f675.h: 1537: extern volatile __bit GPIO1 @ (((unsigned) &GPIO)*8) + 1;
[; ;pic12f675.h: 1539: extern volatile __bit GPIO2 @ (((unsigned) &GPIO)*8) + 2;
[; ;pic12f675.h: 1541: extern volatile __bit GPIO3 @ (((unsigned) &GPIO)*8) + 3;
[; ;pic12f675.h: 1543: extern volatile __bit GPIO4 @ (((unsigned) &GPIO)*8) + 4;
[; ;pic12f675.h: 1545: extern volatile __bit GPIO5 @ (((unsigned) &GPIO)*8) + 5;
[; ;pic12f675.h: 1547: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic12f675.h: 1549: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic12f675.h: 1551: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic12f675.h: 1553: extern volatile __bit IOC0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f675.h: 1555: extern volatile __bit IOC1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f675.h: 1557: extern volatile __bit IOC2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f675.h: 1559: extern volatile __bit IOC3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f675.h: 1561: extern volatile __bit IOC4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f675.h: 1563: extern volatile __bit IOC5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f675.h: 1565: extern volatile __bit IOCB0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f675.h: 1567: extern volatile __bit IOCB1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f675.h: 1569: extern volatile __bit IOCB2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f675.h: 1571: extern volatile __bit IOCB3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f675.h: 1573: extern volatile __bit IOCB4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f675.h: 1575: extern volatile __bit IOCB5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f675.h: 1577: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic12f675.h: 1579: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic12f675.h: 1581: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic12f675.h: 1583: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic12f675.h: 1585: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic12f675.h: 1587: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic12f675.h: 1589: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic12f675.h: 1591: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic12f675.h: 1593: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic12f675.h: 1595: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic12f675.h: 1597: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f675.h: 1599: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f675.h: 1601: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic12f675.h: 1603: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic12f675.h: 1605: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic12f675.h: 1607: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f675.h: 1609: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f675.h: 1611: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic12f675.h: 1613: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f675.h: 1615: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f675.h: 1617: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic12f675.h: 1619: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic12f675.h: 1621: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f675.h: 1623: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f675.h: 1625: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic12f675.h: 1627: extern volatile __bit TRISIO0 @ (((unsigned) &TRISIO)*8) + 0;
[; ;pic12f675.h: 1629: extern volatile __bit TRISIO1 @ (((unsigned) &TRISIO)*8) + 1;
[; ;pic12f675.h: 1631: extern volatile __bit TRISIO2 @ (((unsigned) &TRISIO)*8) + 2;
[; ;pic12f675.h: 1633: extern volatile __bit TRISIO3 @ (((unsigned) &TRISIO)*8) + 3;
[; ;pic12f675.h: 1635: extern volatile __bit TRISIO4 @ (((unsigned) &TRISIO)*8) + 4;
[; ;pic12f675.h: 1637: extern volatile __bit TRISIO5 @ (((unsigned) &TRISIO)*8) + 5;
[; ;pic12f675.h: 1639: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic12f675.h: 1641: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic12f675.h: 1643: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic12f675.h: 1645: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic12f675.h: 1647: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic12f675.h: 1649: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic12f675.h: 1651: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic12f675.h: 1653: extern volatile __bit WPU0 @ (((unsigned) &WPU)*8) + 0;
[; ;pic12f675.h: 1655: extern volatile __bit WPU1 @ (((unsigned) &WPU)*8) + 1;
[; ;pic12f675.h: 1657: extern volatile __bit WPU2 @ (((unsigned) &WPU)*8) + 2;
[; ;pic12f675.h: 1659: extern volatile __bit WPU4 @ (((unsigned) &WPU)*8) + 4;
[; ;pic12f675.h: 1661: extern volatile __bit WPU5 @ (((unsigned) &WPU)*8) + 5;
[; ;pic12f675.h: 1663: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic12f675.h: 1665: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic12f675.h: 1667: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic12f675.h: 1669: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic12f675.h: 1671: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic12f675.h: 1673: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic12f675.h: 1675: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1677: extern volatile __bit nGPPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic12f675.h: 1679: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic12f675.h: 1681: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic12f675.h: 1683: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic12f675.h: 1685: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;stdutils.h: 68: typedef signed char sint8_t;
[; ;stdutils.h: 69: typedef unsigned char uint8_t;
[; ;stdutils.h: 71: typedef signed int sint16_t;
[; ;stdutils.h: 72: typedef unsigned int uint16_t;
[; ;stdutils.h: 74: typedef signed long int sint32_t;
[; ;stdutils.h: 75: typedef unsigned long int uint32_t;
[; ;stdutils.h: 180: typedef enum
[; ;stdutils.h: 181: {
[; ;stdutils.h: 182: E_FALSE,
[; ;stdutils.h: 183: E_TRUE
[; ;stdutils.h: 184: }Boolean_et;
[; ;stdutils.h: 187: typedef enum
[; ;stdutils.h: 188: {
[; ;stdutils.h: 189: E_FAILED,
[; ;stdutils.h: 190: E_SUCCESS,
[; ;stdutils.h: 191: E_BUSY,
[; ;stdutils.h: 192: E_TIMEOUT
[; ;stdutils.h: 193: }Status_et;
[; ;stdutils.h: 196: typedef enum
[; ;stdutils.h: 197: {
[; ;stdutils.h: 198: E_BINARY=2,
[; ;stdutils.h: 199: E_DECIMAL = 10,
[; ;stdutils.h: 200: E_HEX = 16
[; ;stdutils.h: 201: }NumericSystem_et;
[; ;delay.h: 67: void DELAY_us(uint16_t us_count);
[; ;delay.h: 68: void DELAY_ms(uint16_t ms_count);
[; ;delay.h: 69: void DELAY_sec(uint16_t var_delaySecCount_u16);
"17 main.c
[v _PWM `uc ~T0 @X0 1 e ]
[i _PWM
-> -> 0 `i `uc
]
[; ;main.c: 17: unsigned char PWM = 0;
"18
[v _cycle `uc ~T0 @X0 1 e ]
[i _cycle
-> -> 0 `i `uc
]
[; ;main.c: 18: unsigned char cycle = 0;
"19
[v _ADC `ui ~T0 @X0 1 e ]
[i _ADC
-> -> 0 `i `ui
]
[; ;main.c: 19: unsigned int ADC = 0;
"20
[v _StartTime `ui ~T0 @X0 1 e ]
[; ;main.c: 20: unsigned int StartTime;
"23
[p x FOSC=XT ]
"24
[p x WDTE=OFF ]
"25
[p x PWRTE=OFF ]
"26
[p x MCLRE=OFF ]
"27
[p x BOREN=ON ]
"28
[p x CP=OFF ]
"29
[p x CPD=OFF ]
"31
[v _initPWM `(v ~T0 @X0 1 ef ]
"32
{
[; ;main.c: 31: void initPWM(void)
[; ;main.c: 32: {
[e :U _initPWM ]
[f ]
[; ;main.c: 33: OPTION_REG &= 0xC0;
"33
[e =& _OPTION_REG -> -> 192 `i `uc ]
[; ;main.c: 35: T0IE = 1;
"35
[e = _T0IE -> -> 1 `i `b ]
[; ;main.c: 36: GIE = 1;
"36
[e = _GIE -> -> 1 `i `b ]
[; ;main.c: 37: }
"37
[e :UE 82 ]
}
"39
[v _InitADC `(v ~T0 @X0 1 ef1`uc ]
"40
{
[; ;main.c: 39: void InitADC(unsigned char Channel)
[; ;main.c: 40: {
[e :U _InitADC ]
"39
[v _Channel `uc ~T0 @X0 1 r1 ]
"40
[f ]
[; ;main.c: 41: ANSEL |= 0x02;
"41
[e =| _ANSEL -> -> 2 `i `uc ]
[; ;main.c: 42: TRISIO |= 0x02;
"42
[e =| _TRISIO -> -> 2 `i `uc ]
[; ;main.c: 43: ADCON0 = 0x81;
"43
[e = _ADCON0 -> -> 129 `i `uc ]
[; ;main.c: 44: CMCON = 0x07;
"44
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 45: VRCON = 0x00;
"45
[e = _VRCON -> -> 0 `i `uc ]
[; ;main.c: 46: }
"46
[e :UE 83 ]
}
"57
[v _GetADCValue `(ui ~T0 @X0 1 ef1`uc ]
"58
{
[; ;main.c: 57: unsigned int GetADCValue(unsigned char Channel)
[; ;main.c: 58: {
[e :U _GetADCValue ]
"57
[v _Channel `uc ~T0 @X0 1 r1 ]
"58
[f ]
[; ;main.c: 59: ADCON0 &= 0xf3;
"59
[e =& _ADCON0 -> -> 243 `i `uc ]
[; ;main.c: 61: switch(Channel)
"61
[e $U 86  ]
[; ;main.c: 62: {
"62
{
[; ;main.c: 63: case 0: ADCON0 |= 0x00; break;
"63
[e :U 87 ]
[e =| _ADCON0 -> -> 0 `i `uc ]
[e $U 85  ]
[; ;main.c: 64: case 1: ADCON0 |= 0x04; break;
"64
[e :U 88 ]
[e =| _ADCON0 -> -> 4 `i `uc ]
[e $U 85  ]
[; ;main.c: 65: case 2: ADCON0 |= 0x08; break;
"65
[e :U 89 ]
[e =| _ADCON0 -> -> 8 `i `uc ]
[e $U 85  ]
[; ;main.c: 66: case 3: ADCON0 |= 0x0c; break;
"66
[e :U 90 ]
[e =| _ADCON0 -> -> 12 `i `uc ]
[e $U 85  ]
[; ;main.c: 68: default: return 0;
"68
[e :U 91 ]
[e ) -> -> 0 `i `ui ]
[e $UE 84  ]
"69
}
[; ;main.c: 69: }
[e $U 85  ]
"61
[e :U 86 ]
[e [\ _Channel , $ -> -> 0 `i `uc 87
 , $ -> -> 1 `i `uc 88
 , $ -> -> 2 `i `uc 89
 , $ -> -> 3 `i `uc 90
 91 ]
"69
[e :U 85 ]
[; ;main.c: 71: DELAY_us(10);
"71
[e ( _DELAY_us (1 -> -> 10 `i `ui ]
[; ;main.c: 73: GO_nDONE = 1;
"73
[e = _GO_nDONE -> -> 1 `i `b ]
[; ;main.c: 75: while(GO_nDONE);
"75
[e $U 92  ]
[e :U 93 ]
[e :U 92 ]
[e $ _GO_nDONE 93  ]
[e :U 94 ]
[; ;main.c: 77: return ((ADRESH<<8)+ADRESL);
"77
[e ) -> + << -> _ADRESH `i -> 8 `i -> _ADRESL `i `ui ]
[e $UE 84  ]
[; ;main.c: 78: }
"78
[e :UE 84 ]
}
[v F677 `(v ~T0 @X0 1 tf ]
"80
[v _ISR `IF677 ~T0 @X0 1 e ]
"81
{
[; ;main.c: 80: void interrupt ISR(void)
[; ;main.c: 81: {
[e :U _ISR ]
[f ]
[; ;main.c: 82: cycle++;
"82
[e ++ _cycle -> -> 1 `i `uc ]
[; ;main.c: 83: if(T0IF)
"83
[e $ ! _T0IF 96  ]
[; ;main.c: 84: {
"84
{
[; ;main.c: 85: if(GP0)
"85
[e $ ! _GP0 97  ]
[; ;main.c: 86: {
"86
{
[; ;main.c: 87: TMR0 = 255 - PWM;
"87
[e = _TMR0 -> - -> 255 `i -> _PWM `i `uc ]
[; ;main.c: 88: if(cycle == 15)
"88
[e $ ! == -> _cycle `i -> 15 `i 98  ]
[; ;main.c: 89: {
"89
{
[; ;main.c: 90: GP0 = 0;
"90
[e = _GP0 -> -> 0 `i `b ]
[; ;main.c: 91: cycle = 0;
"91
[e = _cycle -> -> 0 `i `uc ]
"92
}
[e :U 98 ]
"93
}
[; ;main.c: 92: }
[; ;main.c: 93: }
[e $U 99  ]
"94
[e :U 97 ]
[; ;main.c: 94: else
[; ;main.c: 95: {
"95
{
[; ;main.c: 96: TMR0 = PWM;
"96
[e = _TMR0 _PWM ]
[; ;main.c: 97: if(cycle == 15)
"97
[e $ ! == -> _cycle `i -> 15 `i 100  ]
[; ;main.c: 98: {
"98
{
[; ;main.c: 99: GP0 = 1;
"99
[e = _GP0 -> -> 1 `i `b ]
[; ;main.c: 100: cycle = 0;
"100
[e = _cycle -> -> 0 `i `uc ]
"101
}
[e :U 100 ]
"102
}
[e :U 99 ]
[; ;main.c: 101: }
[; ;main.c: 102: }
[; ;main.c: 103: T0IF = 0;
"103
[e = _T0IF -> -> 0 `i `b ]
"104
}
[e :U 96 ]
[; ;main.c: 104: }
[; ;main.c: 105: }
"105
[e :UE 95 ]
}
"110
[v _main `(v ~T0 @X0 1 ef ]
"111
{
[; ;main.c: 110: void main()
[; ;main.c: 111: {
[e :U _main ]
[f ]
[; ;main.c: 112: ANSEL = 0x00;
"112
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 113: ADCON0 = 0x00;
"113
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 114: CMCON = 0x07;
"114
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 115: VRCON = 0x00;
"115
[e = _VRCON -> -> 0 `i `uc ]
[; ;main.c: 116: TRISIO = 0x08;
"116
[e = _TRISIO -> -> 8 `i `uc ]
[; ;main.c: 117: GPIO = 0x00;
"117
[e = _GPIO -> -> 0 `i `uc ]
[; ;main.c: 119: initPWM();
"119
[e ( _initPWM ..  ]
[; ;main.c: 120: GP2 = 1;
"120
[e = _GP2 -> -> 1 `i `b ]
[; ;main.c: 122: InitADC(1);
"122
[e ( _InitADC (1 -> -> 1 `i `uc ]
"125
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 125: unsigned char i;
[; ;main.c: 128: PWM = 127;
"128
[e = _PWM -> -> 127 `i `uc ]
[; ;main.c: 129: DELAY_ms(70);
"129
[e ( _DELAY_ms (1 -> -> 70 `i `ui ]
[; ;main.c: 130: while(1)
"130
[e :U 103 ]
[; ;main.c: 131: {
"131
{
[; ;main.c: 132: StartTime = GetADCValue(1);
"132
[e = _StartTime ( _GetADCValue (1 -> -> 1 `i `uc ]
[; ;main.c: 138: {
"138
{
"140
}
[; ;main.c: 140: }
[; ;main.c: 142: for(i = 4; i < 15; i++)
"142
{
[e = _i -> -> 4 `i `uc ]
[e $ < -> _i `i -> 15 `i 105  ]
[e $U 106  ]
"143
[e :U 105 ]
[; ;main.c: 143: {
{
[; ;main.c: 144: PWM = i*10;
"144
[e = _PWM -> * -> _i `i -> 10 `i `uc ]
[; ;main.c: 145: DELAY_ms(StartTime);
"145
[e ( _DELAY_ms (1 _StartTime ]
"146
}
"142
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 15 `i 105  ]
[e :U 106 ]
"146
}
[; ;main.c: 146: }
[; ;main.c: 147: while(1);
"147
[e :U 109 ]
[e :U 108 ]
[e $U 109  ]
[e :U 110 ]
"156
}
[e :U 102 ]
"130
[e $U 103  ]
[e :U 104 ]
[; ;main.c: 156: }
[; ;main.c: 157: }
"157
[e :UE 101 ]
}
